@model XSIS.Shop.ViewModels.CustomerViewModels

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


<div class="card">
    <div class="card-header">
        <h2>
            Edit Existing Customer
            <small>
                Form di bawah ini digunakan untuk mengedit customer yang sudah existing.
            </small>
        </h2>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "error" })
        @Html.HiddenFor(model => model.Id)

        <div class="card-body card-padding">
            <div class="form-group">
                <div class="fg-line">
                    @Html.LabelFor(model => model.FirstName)
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control input-sm", @placeholder = "Masukkan Nama Depan" } })
                </div>
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <div class="fg-line">
                    @Html.LabelFor(model => model.LastName)
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control input-sm", @placeholder = "Masukkan Nama Belakang" } })
                </div>
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <div class="fg-line">
                    @Html.LabelFor(model => model.City)
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control input-sm", @placeholder = "Masukkan Kota" } })
                </div>
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <div class="fg-line">
                    @Html.LabelFor(model => model.Country)
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control input-sm", @placeholder = "Masukkan Negara" } })
                </div>
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <div class="fg-line">
                    @Html.LabelFor(model => model.Phone)
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control input-sm", @placeholder = "Masukkan No. Telepon" } })
                </div>
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <div class="fg-line">
                    @Html.LabelFor(model => model.Email)
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-sm", @placeholder = "Masukkan Alamat E-Mail" } })
                </div>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "error" })
            </div>
            <a href="@Url.Action("Index","Customers")" class="btn btn-info btn-sm m-t-10">Back to Index</a>
            <button type="submit" class="btn btn-primary btn-sm m-t-10">Update</button>
        </div>
    }
</div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
